namespace com.ji.Action;

use Member.ump;
use MemberDao.ump;
external Action{};
class MemberAction{
depend org.apache.struts.action.ActionMapping;
depend org.apache.struts.action.ActionForm;
depend javax.servlet.http.HttpServletRequest;
depend javax.servlet.http.HttpServletResponse;
depend org.apache.struts.action.ActionForward;
depend org.apache.struts.action.Action;
depend java.io.IOException;
depend java.util.*;

isA Action;
0..1 -> 1 Member memberForm;
0..1 -> 1 MemberDao dao;
       int action;
public MemberAction(){}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		dao = new MemberDao();
		this.action = Integer.parseInt(request.getParameter("action"));
		switch (action) {
		case 0: {
			return insertMember(mapping, form, request, response); 
		}
		case 1: {
			return checkMember(mapping, form, request, response); 
		}
		case 2: {
			return selectMember(mapping, form, request, response); 
		}
        case 3: {
			return selectOneMember(mapping, form, request, response); 
		}
		case 4: {
			return deleteMember(mapping, form, request, response); 
		}
		case 5: {
			return selectOneMemberHead(mapping, form, request, response); 
		}
		case 6: {
			return updateMemberHead(mapping, form, request, response); 
		}

		}
		// MemberForm memberForm = (MemberForm) form;
		throw new java.lang.UnsupportedOperationException(
				"Method $execute() not yet implemented.");
	}

	
	public ActionForward updateMemberHead(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		Member memberForm = (Member) form;		
		dao.updateMember(memberForm);
		request.setAttribute("success", "update your information");
		return mapping.findForward("operationMember");
	}

	
	public ActionForward selectOneMemberHead(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		request.setAttribute("form", dao.selectOneMember(Integer
				.valueOf(request.getParameter("id"))));
		return mapping.findForward("selectOneMemberHead");
	}


	public ActionForward deleteMember(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
	   if (!dao.deleteMember(Integer.valueOf(request.getParameter("id")))) {
		   return mapping.findForward("deleteMember");
		}
		return selectMember(mapping,form,request,response);
	}


	public ActionForward selectOneMember(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		Integer id=Integer.valueOf(request.getParameter("id"));
		request.setAttribute("form", dao.selectOneMember(id));
		return mapping.findForward("selectOneMember");
	}


	public ActionForward selectMember(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List<Member> list = dao.selectMember();
		int pageNumber = list.size(); 
		int maxPage = pageNumber; 
		String number = request.getParameter("i");
		if (maxPage % 6 == 0) {
			maxPage = maxPage / 6;
		} else {
			maxPage = maxPage / 6 + 1;
		}
		if (number == null) {
			number = "0";
		}
		request.setAttribute("number", String.valueOf(number));
		request.setAttribute("maxPage", String.valueOf(maxPage));
		request.setAttribute("pageNumber", String.valueOf(pageNumber));
		request.setAttribute("list", list);
		return mapping.findForward("selectMember");
	}

	
	public ActionForward checkMember(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String name = request.getParameter("userName");
		System.out.println("name" + name);
		Member memberForm = dao.selectMember(name);
		if (memberForm==null||memberForm.equals("")) {
			request.setAttribute("result", "no such username");
		} else if (!memberForm.getPassword().equals(request.getParameter("password").trim())) {
		    System.out.println("password"+request.getParameter("password"));
		     System.out.println("password"+memberForm.getPassword());
		    
			request.setAttribute("result", "password error");
		} else {	
			request.setAttribute("memberForm", memberForm);
		}
		return mapping.findForward("checkMember");
	}

	public ActionForward insertMember(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {	
		 memberForm=(Member)form;
		Member formSelect=dao.selectMember(memberForm.getUserName());
		if (formSelect == null || formSelect.equals("")) {
			dao.insertMember(memberForm);
			request.setAttribute("success", "register successful");
		} else {
			request.setAttribute("success", "register error");
		}
		return mapping.findForward("operationMember");
	}


}